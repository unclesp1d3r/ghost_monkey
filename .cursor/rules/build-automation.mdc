---
globs: *.nim,*.nims,justfile,*.sh,*.ps1
description: Build automation and development workflow patterns
---

# Build Automation and Development Workflow

## Dependencies Management

```bash
# Install Nim via choosenim (cross-platform)
curl https://nim-lang.org/choosenim/init.sh -sSf | sh

# Install required dependencies
nimble refresh
nimble install -y strenc
```

## Build Commands

- **Debug builds**: `nim c client.nim` and `nim c implant.nim`
- **Release builds**: `nim c -d:release client.nim` and `nim c -d:release implant.nim`
- **Static analysis**: `nim check client.nim` and `nim check implant.nim`

## Cleanup Commands

```bash
# Unix/macOS
rm -rf nimcache/ client implant client.exe implant.exe

# Windows PowerShell
Remove-Item -Recurse -Force nimcache, client.exe, implant.exe -ErrorAction SilentlyContinue
```

## Testing Workflow

1. Install dependencies with `nimble install -y strenc`
2. Build components in release mode
3. Start implant: `./implant [port]`
4. Connect with client: `./client`
5. Test with benign commands only
6. Clean up all artifacts

## Justfile Integration (Optional)

- Use `just` for task automation
- Implement DRY principles with subrecipe calls
- Include dependency management, building, and testing
- Support both Unix and Windows platforms
