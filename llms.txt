# Ghost_Monkey

> Educational UNIX backdoor written in Rust for authorized penetration testing and OSCP preparation. Features secure client-implant communication using modern cryptography, TUI interface, and comprehensive educational documentation.

Ghost_Monkey is an educational tool that demonstrates network programming and remote access techniques in controlled environments. The project leverages the `network-protocol` crate for secure communication with ECDH handshake and ChaCha20-Poly1305 encryption, supports both call-in and callback modes, and includes a rich terminal user interface built with ratatui.

## Documentation

- [Contributing Guide](CONTRIBUTING.md): Development process, coding standards, and safety guidelines for contributors
- [Documentation Index](docs/index.md): Project overview with quick start guide and architecture diagrams
- [README](README.md): Main project documentation with features, installation, and usage examples

## Specifications

- [Core Protocol Design](.kiro/specs/core-networking-protocol/design.md): Architecture and component design for secure networking protocol
- [Core Protocol Requirements](.kiro/specs/core-networking-protocol/requirements.md): Detailed requirements for client-implant communication system
- [Core Protocol Tasks](.kiro/specs/core-networking-protocol/tasks.md): Implementation plan with development phases and testing strategy
- [Product Overview](.kiro/steering/product.md): Educational purpose, key characteristics, and documentation standards
- [Project Structure](.kiro/steering/structure.md): Repository layout, code organization patterns, and development conventions
- [Rust Implementation Guide](RUST_IMPLEMENTATION_GUIDE.md): Practical steps for implementing Rust version based on original ghost_shell
- [Rust Specification](RUST_SPEC.md): Comprehensive specification for rewriting to Rust with component details
- [Technology Stack](.kiro/steering/tech.md): Rust toolchain, dependencies, build system, and cross-compilation setup

## Optional

- [License](LICENSE): Project licensing terms and conditions
